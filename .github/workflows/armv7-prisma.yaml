name: Building Prisma Engine for ARMv7
on:
  workflow_dispatch:
    inputs:
      prisma_tag:
        description: "Prisma Engine Version"
        type: string
        required: true
        default: |
          The release tag of prisma/prisma-engines

jobs:
  build:
    name: "Building Prisma Engine for ARMv7"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      SQLITE_MAX_VARIABLE_NUMBER: 250000
      SQLITE_MAX_EXPR_DEPTH: 10000
    steps:
      - name: Checkout prisma/prisma-engines
        uses: actions/checkout@v4
        with:
          repository: "prisma/prisma-engines"
          ref: ${{ inputs.prisma_tag }}

      - name: Setup rust env
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: armv7-unknown-linux-gnueabihf

      - name: Setup rust cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Cross-compile env
        run: |
          cat << EOF | sudo tee /etc/apt/sources.list
          # x86 Support
          deb [arch=amd64,i386] http://archive.ubuntu.com/ubuntu jammy main restricted universe multiverse
          deb [arch=amd64,i386] http://archive.ubuntu.com/ubuntu jammy-updates main restricted universe multiverse
          deb [arch=amd64,i386] http://archive.ubuntu.com/ubuntu jammy-backports main restricted universe multiverse
          deb [arch=amd64,i386] http://archive.ubuntu.com/ubuntu jammy-security main restricted universe multiverse
          # ARM Support
          deb [arch=armhf,arm64] http://ports.ubuntu.com/ubuntu-ports jammy main restricted universe multiverse
          deb [arch=armhf,arm64] http://ports.ubuntu.com/ubuntu-ports jammy-updates main restricted universe multiverse
          deb [arch=armhf,arm64] http://ports.ubuntu.com/ubuntu-ports jammy-backports main restricted universe multiverse
          deb [arch=armhf,arm64] http://ports.ubuntu.com/ubuntu-ports jammy-security main restricted universe multiverse
          EOF

          sudo dpkg --add-architecture armhf && sudo apt update
          sudo apt install -y \
            gcc-arm-linux-gnueabihf \
            libssl-dev:armhf \
            zlib1g-dev:armhf

          rustup target add armv7-unknown-linux-gnueabihf

      - name: Build engine
        run: |
          cargo build --release --target armv7-unknown-linux-gnueabihf
          chmod +x ${{ github.workspace }}/target/armv7-unknown-linux-gnueabihf/release/schema-engine
        env:
          PKG_CONFIG_ALLOW_CROSS: 1
          PKG_CONFIG_PATH: /usr/lib/arm-linux-gnueabihf/pkgconfig
          PKG_CONFIG_SYSROOT_DIR: /usr/arm-linux-gnueabihf
          CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER: arm-linux-gnueabihf-gcc

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: |
            ${{ github.workspace }}/target/armv7-unknown-linux-gnueabihf/release/*

      # - name: Release ARMv7 Prisma Engine ${{ inputs.prisma_tag }}
      #   uses: ncipollo/release-action@v1
      #   with:
      #     allowUpdates: true
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     name: ARMv7 Prisma Engine ${{ inputs.prisma_tag }}
      #     tag: ${{ inputs.prisma_tag }}
      #     draft: false
      #     prerelease: false
      #     makeLatest: latest
      #     removeArtifacts: true
      #     artifacts: |
      #       ${{ github.workspace }}/target/armv7-unknown-linux-gnueabihf/release/*
